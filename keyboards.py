from aiogram.types import KeyboardButton
from aiogram.utils.keyboard import ReplyKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardButton, InlineKeyboardMarkup


# ====================
# –û–±—â–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
# ====================


main_menu = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='‚öñ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é')],
    [KeyboardButton(text='üìö –ó–∞–∫–æ–Ω—ã –∏ –ø—Ä–∞–≤–∞')],
    [KeyboardButton(text='üÜò –ñ–∞–ª–æ–±–∞ / –≤–æ–ø—Ä–æ—Å')]
], resize_keyboard=True)


async def consumer_card_list_for_user(card_list: list):
    key = InlineKeyboardBuilder()
    for c in card_list:
        key.button(text=c['card_name'].replace('\\', ''), callback_data=f'u_card_view_{c["card_id"]}')
    key.adjust(1)
    return key.as_markup()


async def consumer_card_items(card_item_list: list):
    key = InlineKeyboardBuilder()
    for i in card_item_list:
        key.button(text=i['item_name'].replace('\\', ''), callback_data=f'u_item_view_{i["item_id"]}')
    key.button(text='‚è™ –ù–∞–∑–∞–¥', callback_data=f'open_card_list')
    key.adjust(1)
    return key.as_markup()


async def item_back(card_id):
    key = InlineKeyboardBuilder()
    key.button(text='‚è™ –ù–∞–∑–∞–¥', callback_data=f'u_card_view_{card_id}')
    key.adjust(1)
    return key.as_markup()


async def law_list_user(laws: list):
    keys = InlineKeyboardBuilder()
    for la in laws:
        keys.button(text=la['law_name'].replace('\\', ''), callback_data=f'u_law_view_{la["law_id"]}')
    keys.adjust(1)
    return keys.as_markup()

law_back = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚è™ –ù–∞–∑–∞–¥', callback_data='open_law_list')]
])


async def sub_keys(channel_url):
    keys = InlineKeyboardBuilder()
    keys.button(text='–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è', url=channel_url)
    keys.button(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å', callback_data='start')
    keys.adjust(1)
    return keys.as_markup()


cancel_button = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–û—Ç–º–µ–Ω–∞')]
], resize_keyboard=True)


# ====================
# –î–ª—è –∞–¥–º–∏–Ω–æ–≤
# ====================

admin_menu = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='üìù –ö–∞—Ä—Ç—ã –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–µ–π'), KeyboardButton(text='üìï –ó–∞–∫–æ–Ω—ã –∏ –ø—Ä–∞–≤–∞')],
    [KeyboardButton(text='üì• –ñ–∞–ª–æ–±—ã / –í–æ–ø—Ä–æ—Å—ã')]
], resize_keyboard=True)

consumer_card_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üìú –¢–µ–∫—É—â–∏–µ –∫–∞—Ä—Ç—ã', callback_data='card_current')],
    [InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç—É', callback_data='card_add')]
])

law_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='üìú –¢–µ–∫—É—â–∏–µ –∑–∞–∫–æ–Ω—ã –∏ –ø—Ä–∞–≤–∞', callback_data='law_current')],
    [InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–æ–Ω –∏–ª–∏ –ø—Ä–∞–≤–æ', callback_data='law_add')]
])


async def law_action(law_name: str, law_id: str):
    keys = InlineKeyboardBuilder()
    law_name = law_name.replace('\\', '')
    keys.button(text=f'–£–¥–∞–ª–∏—Ç—å "{law_name}"', callback_data=f'law_remove_{law_id}')
    keys.button(text='‚è™ –ù–∞–∑–∞–¥', callback_data='law_current')
    keys.adjust(1)
    return keys.as_markup()


async def law_list(laws: list):
    keys = InlineKeyboardBuilder()
    for la in laws:
        keys.button(text=la['law_name'].replace('\\', ''), callback_data=f'law_show_{la["law_id"]}')
    keys.adjust(1)
    return keys.as_markup()


async def consumer_card_list(card_list: list):
    key = InlineKeyboardBuilder()
    for c in card_list:
        key.button(text=c['card_name'].replace('\\', ''), callback_data=f'card_show_{c["card_id"]}')
    key.adjust(1)
    return key.as_markup()


async def consumer_card_action(card_name: str, card_id: str, card_item_list: list):
    key = InlineKeyboardBuilder()
    key.button(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—É–Ω–∫—Ç', callback_data=f'card_add-item_{card_id}')
    for i in card_item_list:
        key.button(text=i['item_name'].replace('\\', ''), callback_data=f'item_show_{i["item_id"]}')
    card_name = card_name.replace('\\', '')
    key.button(text=f'–£–¥–∞–ª–∏—Ç—å "{card_name}"', callback_data=f'card_remove_{card_id}')
    key.adjust(1)
    return key.as_markup()


async def item_action(item):
    key = InlineKeyboardBuilder()
    key.button(text='–£–¥–∞–ª–∏—Ç—å –ø—É–Ω–∫—Ç', callback_data=f'item_remove_{item["item_id"]}')
    key.button(text='‚è™ –ù–∞–∑–∞–¥', callback_data=f'card_show_{item["card_id"]}')
    key.adjust(1)
    return key.as_markup()


confirm = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='‚úÖ –î–∞', callback_data='yes')],
    [InlineKeyboardButton(text='üö´ –ù–µ—Ç', callback_data='no')]
])

complaints_menu = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='üì• –°–º–æ—Ç—Ä–µ—Ç—å –∂–∞–ª–æ–±—ã/–≤–æ–ø—Ä–æ—Å—ã')],
    [KeyboardButton(text='üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –∂–∞–ª–æ–±—É/–≤–æ–ø—Ä–æ—Å')],
    [KeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å –∂–∞–ª–æ–±—É/–≤–æ–ø—Ä–æ—Å')]
], resize_keyboard=True)
